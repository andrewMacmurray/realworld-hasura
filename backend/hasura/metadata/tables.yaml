- table:
    schema: public
    name: articles
  configuration:
    custom_root_fields:
      insert: publish_articles
      insert_one: publish_article
      select_by_pk: article
      delete_by_pk: delete_article
      update_by_pk: edit_article
    custom_column_names: {}
  object_relationships:
  - name: author
    using:
      foreign_key_constraint_on: author_id
  array_relationships:
  - name: comments
    using:
      foreign_key_constraint_on:
        column: article_id
        table:
          schema: public
          name: comments
  - name: likes
    using:
      foreign_key_constraint_on:
        column: article_id
        table:
          schema: public
          name: likes
  - name: tags
    using:
      foreign_key_constraint_on:
        column: article_id
        table:
          schema: public
          name: tags
  insert_permissions:
  - role: user
    permission:
      check: {}
      set:
        author_id: x-hasura-User-Id
      columns:
      - about
      - content
      - title
      backend_only: false
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - about
      - content
      - created_at
      - id
      - title
      filter: {}
  - role: user
    permission:
      columns:
      - about
      - content
      - created_at
      - id
      - title
      filter: {}
  update_permissions:
  - role: user
    permission:
      columns:
      - about
      - content
      - title
      filter:
        author_id:
          _eq: X-Hasura-User-Id
      check: null
  delete_permissions:
  - role: user
    permission:
      filter:
        author_id:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: comments
  configuration:
    custom_root_fields:
      insert_one: post_comment
      delete_by_pk: delete_comment
      update_by_pk: update_comment
    custom_column_names: {}
  object_relationships:
  - name: article
    using:
      foreign_key_constraint_on: article_id
  - name: user
    using:
      foreign_key_constraint_on: user_id
  insert_permissions:
  - role: user
    permission:
      check:
        comment:
          _ne: ""
      set:
        user_id: x-hasura-User-Id
      columns:
      - article_id
      - comment
      backend_only: false
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - comment
      - created_at
      - id
      filter: {}
  - role: user
    permission:
      columns:
      - comment
      - created_at
      - id
      filter: {}
  update_permissions:
  - role: user
    permission:
      columns:
      - comment
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      check:
        comment:
          _ne: ""
  delete_permissions:
  - role: user
    permission:
      filter:
        user_id:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: follows
  configuration:
    custom_root_fields:
      insert: follow_authors
      insert_one: follow_author
      delete: unfollow_authors
    custom_column_names: {}
  object_relationships:
  - name: user
    using:
      foreign_key_constraint_on: following_id
  insert_permissions:
  - role: user
    permission:
      check:
        following_id:
          _ne: X-Hasura-User-Id
      set:
        user_id: x-hasura-User-Id
      columns:
      - following_id
      backend_only: false
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - following_id
      filter: {}
  - role: user
    permission:
      columns:
      - following_id
      filter: {}
  delete_permissions:
  - role: user
    permission:
      filter:
        user_id:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: likes
  configuration:
    custom_root_fields:
      insert: like_articles
      insert_one: like_article
    custom_column_names: {}
  object_relationships:
  - name: article
    using:
      foreign_key_constraint_on: article_id
  - name: user
    using:
      foreign_key_constraint_on: user_id
  insert_permissions:
  - role: user
    permission:
      check: {}
      set:
        user_id: x-hasura-User-Id
      columns:
      - article_id
      backend_only: false
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - article_id
      - user_id
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - article_id
      - user_id
      filter: {}
      allow_aggregations: true
- table:
    schema: public
    name: tags
  configuration:
    custom_root_fields:
      select_aggregate: tags_summary
      insert_one: insert_tag
      select_by_pk: tag
    custom_column_names: {}
  object_relationships:
  - name: article
    using:
      foreign_key_constraint_on: article_id
  computed_fields:
  - name: count
    definition:
      function:
        schema: public
        name: tag_count
    comment: ""
  insert_permissions:
  - role: user
    permission:
      check:
        article:
          author_id:
            _eq: X-Hasura-User-Id
      columns:
      - article_id
      - tag
      backend_only: false
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - tag
      computed_fields:
      - count
      filter: {}
  - role: user
    permission:
      columns:
      - tag
      computed_fields:
      - count
      filter: {}
  delete_permissions:
  - role: user
    permission:
      filter:
        article:
          author_id:
            _eq: X-Hasura-User-Id
- table:
    schema: public
    name: users
  configuration:
    custom_root_fields:
      insert_one: create_user
      select_by_pk: user
      update_by_pk: update_user
    custom_column_names: {}
  array_relationships:
  - name: articles
    using:
      foreign_key_constraint_on:
        column: author_id
        table:
          schema: public
          name: articles
  - name: follows
    using:
      foreign_key_constraint_on:
        column: user_id
        table:
          schema: public
          name: follows
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - id
      - profile_image
      - username
      filter: {}
  - role: user
    permission:
      columns:
      - id
      - profile_image
      - username
      filter: {}
  update_permissions:
  - role: user
    permission:
      columns:
      - bio
      - email
      - profile_image
      - username
      filter:
        id:
          _eq: X-Hasura-User-Id
      check: null
